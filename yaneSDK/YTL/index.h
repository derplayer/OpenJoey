//	includes Yaneurao Template Library

//#include "../YTL/string.h"				//	std::string互換クラス
#include "../YTL/macro.h"				//	for versatile macro
#include "../YTL/exceptions.h"			//	standard exception class
#include "../YTL/ref_deleter.h"			//	参照カウント付きオブジェクト解体子
#include "../YTL/ref_callback_deleter.h"//	参照カウント付きコールバック解体子
#include "../YTL/smart_ptr.h"			//	real smart pointer
#include "../YTL/smart_vector_ptr.h"	//	vector of smart pointer
#include "../YTL/smart_list_ptr.h"		//	list of smart pointer
#include "../YTL/list_chain.h"			//	list of pointer
#include "../YTL/proxy_ptr.h"			//	proxy pointer
#include "../YTL/singleton.h"			//	singleton template
#include "../YTL/mediator.h"			//	mediator template
#include "../YTL/factory_permutation.h"	//	クラス置換用テンプレート
#include "../YTL/function_callback.h"	//	汎用関数コールバック
#include "../YTL/ref_creater.h"			//	参照カウント付きオブジェクト生成
//#include "../YTL/variant.h"				//	汎用型
#include "../YTL/delegate.h"			//	deligate
#include "../YTL/fast_list.h"			//	O(log N)で検索できるlist
